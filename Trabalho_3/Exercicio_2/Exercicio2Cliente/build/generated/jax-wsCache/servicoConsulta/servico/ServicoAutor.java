
package servico;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "servicoAutor", targetNamespace = "http://Servico/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicoAutor {


    /**
     * 
     * @param autor
     * @param nomeAtualizar
     */
    @WebMethod
    @RequestWrapper(localName = "atualizarAutor", targetNamespace = "http://Servico/", className = "servico.AtualizarAutor")
    @ResponseWrapper(localName = "atualizarAutorResponse", targetNamespace = "http://Servico/", className = "servico.AtualizarAutorResponse")
    @Action(input = "http://Servico/servicoAutor/atualizarAutorRequest", output = "http://Servico/servicoAutor/atualizarAutorResponse")
    public void atualizarAutor(
        @WebParam(name = "autor", targetNamespace = "")
        Autor autor,
        @WebParam(name = "nomeAtualizar", targetNamespace = "")
        String nomeAtualizar);

    /**
     * 
     * @param autor
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "excluirAutor", targetNamespace = "http://Servico/", className = "servico.ExcluirAutor")
    @Action(input = "http://Servico/servicoAutor/excluirAutor")
    public void excluirAutor(
        @WebParam(name = "autor", targetNamespace = "")
        String autor);

    /**
     * 
     * @param autor
     */
    @WebMethod
    @RequestWrapper(localName = "criarAutor", targetNamespace = "http://Servico/", className = "servico.CriarAutor")
    @ResponseWrapper(localName = "criarAutorResponse", targetNamespace = "http://Servico/", className = "servico.CriarAutorResponse")
    @Action(input = "http://Servico/servicoAutor/criarAutorRequest", output = "http://Servico/servicoAutor/criarAutorResponse")
    public void criarAutor(
        @WebParam(name = "autor", targetNamespace = "")
        Autor autor);

    /**
     * 
     * @param nomeAutor
     * @return
     *     returns java.util.List<servico.Autor>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consultarAutor", targetNamespace = "http://Servico/", className = "servico.ConsultarAutor")
    @ResponseWrapper(localName = "consultarAutorResponse", targetNamespace = "http://Servico/", className = "servico.ConsultarAutorResponse")
    @Action(input = "http://Servico/servicoAutor/consultarAutorRequest", output = "http://Servico/servicoAutor/consultarAutorResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Servico/servicoAutor/consultarAutor/Fault/Exception")
    })
    public List<Autor> consultarAutor(
        @WebParam(name = "nomeAutor", targetNamespace = "")
        String nomeAutor)
        throws Exception_Exception
    ;

}
